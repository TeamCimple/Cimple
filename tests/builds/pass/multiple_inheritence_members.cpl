interface Cimple {
	int getA();
};

struct TheirStruct {
	int a;
	int b;
};

struct HisStruct {
	int a;

	HisStruct(int t) {
		a = 4;
	}

	~HisStruct() {
	
	}
};

struct AnotherStruct {
	float c;
	struct HisStruct *h;

	AnotherStruct(float m, int f) {
		c = m;
		h = make HisStruct(f);
	}

	~AnotherStruct() {

	}
};

struct YourStruct extends HisStruct{
	int b;
};

struct MyStruct extends YourStruct{
	int c;
};

int (TheirStruct *t) getB() {
	return t.b;
}

int (MyStruct *m) getA() {
	return 1;
}

int (YourStruct *y) getA() {
	return 2;
}

int (HisStruct *h) getA() {
	return 3;
}

int main() {
	struct TheirStruct h;
	h.b = 1;
	return h.getB();
}
